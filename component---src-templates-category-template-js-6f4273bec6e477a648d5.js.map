{"version":3,"sources":["webpack:///./src/templates/categoryTemplate.js","webpack:///./src/components/post-item.js"],"names":["CategoryView","styled","div","CategoryTemplate","render","this","props","pageContext","data","location","category","posts","allMarkdownRemark","edges","title","description","keywords","className","map","frontmatter","node","listPath","pathname","key","path","Component","PostItemView","icon","PostItem","childImageSharp","fluid","src","classToggle","triggerHook","to","state","prevPath","width","alt","date","excerpt"],"mappings":"wLAOMA,EAAeC,IAAOC,IAAV,qFAAGD,CAAH,gyCAuFZE,E,kGAEJC,OAAA,WAAU,IAAD,OACP,EAAwCC,KAAKC,MAArCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,SACnBC,EAAaH,EAAbG,SACOC,EAAUH,EAAKI,kBAAtBC,MAER,OACE,kBAAC,IAAD,CAAQJ,SAAUA,GAChB,kBAAC,IAAD,CAAKK,MAAWJ,EAAN,SAAyBK,YAAW,6BAA+BL,EAAYM,SAAU,CAAEN,EAAU,aAAc,UAC7H,kBAACV,EAAD,KACE,yBAAKiB,UAAU,mBACb,wBAAIA,UAAU,kBAAd,aAA0CP,IAE5C,yBAAKO,UAAS,kBACXN,EAAMO,KAAI,YAAiB,IAClBC,EADiB,EAAdC,KACHD,YACR,OACE,kBAAC,IAAD,CAAUE,SAAW,EAAKf,MAAMG,SAASa,SAAWC,IAAKJ,EAAYK,KAAML,YAAaA,W,GAlBzEM,aAkEhBtB,a,kCChKf,6DAKMuB,EAAezB,IAAOC,IAAV,0EAAGD,CAAH,glCAwBI,SAAAK,GAAK,OAAGA,EAAMqB,QAyErBC,IA3BE,SAACtB,GAChB,IAAQa,EAA0Bb,EAA1Ba,YAAaE,EAAaf,EAAbe,SAGrB,OACA,kBAACK,EAAD,CAAcC,KAAOR,EAAYQ,KAAKE,gBAAgBC,MAAMC,KAC1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,YAAa,UAAWC,YAAa,KAC1C,yBAAKhB,UAAU,gBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,cACZ,kBAAC,OAAD,CAAMiB,GAAIf,EAAYK,KAAMW,MAAO,CAACC,SAAUf,IAA9C,IAA4DF,EAAYL,MAAxE,MAEF,yBAAKG,UAAU,aACb,kBAAC,OAAD,CAAMiB,GAAE,kBAAoBf,EAAYT,UAAY,yBAAK2B,MAAM,KAAKN,IAAKZ,EAAYQ,KAAKE,gBAAgBC,MAAMC,IAAKO,IAAKnB,EAAYT,YADxI,IAEQ,8BAAOS,EAAYoB,OAE3B,yBAAKtB,UAAU,gBACZE,EAAYqB","file":"component---src-templates-category-template-js-6f4273bec6e477a648d5.js","sourcesContent":["import React, { Component } from \"react\"\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport Layout from \"../layouts/layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from './../components/post-item'\n\nconst CategoryView = styled.div`\n  margin: 0px auto 0px;\n  padding: 120px 0 80px;\n  width: 100%;\n  min-height: 10px;\n  @media(max-width: 768px){\n    margin: 0px auto 0px;\n\t\tpadding: 50px 0 80px;\n  }\n  @media(max-width: 510px){\n    margin: 0px auto 0px;\n\t\tpadding: 100px 0 80px;\n  }\n  .category-header {\n    margin: 100px auto;\n    box-sizing: border-box;\n    width: 35%;\n    p {\n      text-align: center;\n      font-size: 50px;\n      color: var(--primaryColor);\n    }\n    .category-title {\n      text-align: center;\n      margin-top: -10px;\n      font-size: 24px;\n      color: var(--tertiaryColor);\n      text-transform: uppercase;\n    }\n    @media(max-width:1590px){ width: 40% }\n    @media(max-width:1100px){ width:55% }\n    @media(max-width:878px){ width:65% }\n    @media(max-width:510px){\n      width:95%;\n    }\n  }\n\n  .buttons {\n    display: flex;\n    justify-content: center;\n    padding: 0px;\n    margin: 0px auto 40px !important;\n    button {\n      color: var(--primaryColor);\n      display:block;\n      border: 0px;\n      -webkit-appearance: none !important;\n      background:var(--bgColor); \n      color:var(--primaryColor); \n      margin: 5px;\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      outline: none;\n      box-shadow: 0 0 0 1px rgba(var(--primaryColorRGB), 0.05), 0 2px 4px rgba(var(--primaryColorRGB), 0.08);      \n      &.active {\n        background: #a3cccc;\n      }\n    }\n    @media(max-width:510px){\n      display:none;\n    }\n  }\n\n  .post-list {\n    display: block;\n\n    &.grid {\n      display: flex;\n      justify-content: flex-start;\n      flex-wrap: wrap;\n      flex-direction: row;\n    }\n  }\n  @media(min-width: 768px){\n    .post-list {\n      transition: all 1s linear;\n      &.grid {\n        display: flex;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        flex-direction: row;\n      }\n    }\n  }\n\n`\nclass CategoryTemplate extends Component {\n\n  render() {\n    const { pageContext, data, location } = this.props;\n    const { category } = pageContext;\n    const { edges: posts } = data.allMarkdownRemark;\n\n    return (\n      <Layout location={location}>\n        <SEO title={`${ category } pills`} description={`Little of knowledge about ${category}`} keywords={[ category, 'javascript', 'code' ]}/>\n        <CategoryView>\n          <div className=\"category-header\">\n            <h2 className=\"category-title\">All about {category}</h2>\n          </div>\n          <div className={`post-list list`}>\n            {posts.map(({node: post})=>{\n              const { frontmatter } = post;\n              return (\n                <PostItem listPath={ this.props.location.pathname } key={frontmatter.path} frontmatter={frontmatter}/>\n              )\n            })}\n          </div>\n        </CategoryView>\n      </Layout>\n    )\n  }\n}\nexport const CategoryQuery = graphql`\n  query($category: String!) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { type: { eq: \"post\"}, category: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            excerpt\n            category\n            thumbnail {\n              childImageSharp {\n                  fluid(maxWidth: 500) {\n                      src\n                  }\n              }\n            }\n            icon {\n              childImageSharp {\n                  fluid(maxWidth: 50) {\n                      src\n                  }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport default CategoryTemplate\n","import React from 'react';\nimport { Link } from 'gatsby'\nimport styled from 'styled-components';\nimport { Controller, Scene } from 'react-scrollmagic';\n\nconst PostItemView = styled.div`\nmargin: 40px auto 20px;\npadding: 0px 20px;\nbox-sizing: border-box;\nwidth: 50%;\n@media(max-width:1590px){ width: 50%  }\n@media(max-width:1100px){ width: 55%  }\n@media(max-width:878px){ width: 65%  }\n@media(max-width:510px){\n  width:98%;\n  margin: 40px auto 0px;\n  padding: 10px;\n}\n.post-wrapper {\n  height: 100%;\n  opacity: 0;\n  transition: opacity 600ms linear;\n  &.fade-in {\n    opacity: 1;\n  }\n  .post-icon {\n    margin-right: 5px;\n    width: 8px;\n    height: 16px ;\n    background: url(${props=> props.icon});\n    border-radius: 50%/25%;\n    background-size: cover;\n    background-position:center 1px;\n    background-repeat: no-repeat;\n    overflow: hidden;    \n    background-color: transparent; \n    z-index: 10;\n  }\n  .post-date {\n    align-items: center;\n    display: flex;\n    margin: 10px 0px 0px;\n    font-size: 12px;\n    color: var(--primaryColor);\n  } \n  .post-title {\n    align-items: center;\n    display: flex;\n    margin: 20px 0px 20px;\n    padding: 0px;\n    font-weight: 800;\n    line-height: 1.2;\n    font-size: 26px;\n    color: var(--tertiaryColor);\n    font-family: 'Montserrat', sans-serif;\n    @media(max-width:510px){ font-size: 26px }\n\n    a {\n      text-decoration: none;\n      color: var(--tertiaryColor) !important;\n    }\n  }\n  .post-excerpt {\n    display: block;\n    font-size: 15px;\n    font-weight: regular;\n    margin: 3px 0 0;\n    line-height:1.5;\n    color:  var(--primaryColor);\n    font-weight: normal;\n  } \n  \n}\n`\n\nconst PostItem = (props) => {\n  const { frontmatter, listPath } = props;\n\n\n  return (\n  <PostItemView icon={ frontmatter.icon.childImageSharp.fluid.src }>\n    <Controller>\n      <Scene classToggle={'fade-in'} triggerHook={0.85}>\n        <div className=\"post-wrapper\" >\n          <div className=\"post-container\">\n            <h2 className=\"post-title\">\n              <Link to={frontmatter.path} state={{prevPath: listPath }}> {frontmatter.title} </Link>\n            </h2>\n            <div className=\"post-date\">\n              <Link to={`/blog/category/${frontmatter.category}`}><img width=\"10\" src={frontmatter.icon.childImageSharp.fluid.src} alt={frontmatter.category}/></Link>\n              &nbsp;<span>{frontmatter.date}</span>\n            </div>\n            <div className=\"post-excerpt\">\n              {frontmatter.excerpt}\n            </div>\n          </div>\n        </div>\n      </Scene>\n    </Controller>\n  </PostItemView>\n)};\n\nexport default PostItem;"],"sourceRoot":""}