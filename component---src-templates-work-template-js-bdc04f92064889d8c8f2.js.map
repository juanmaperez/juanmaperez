{"version":3,"sources":["webpack:///./src/templates/workTemplate.js","webpack:///./src/components/index/contact-block.js","webpack:///./src/components/image.js"],"names":["WorkTemplateView","styled","div","WorkTemplate","data","location","work","markdownRemark","frontmatter","html","title","description","excerpt","keywords","className","dangerouslySetInnerHTML","__html","images","length","map","element","key","imageUrl","image","childImageSharp","fluid","src","ContactBlockView","ContactBlock","coverAnimation","controller","ScrollMagic","Controller","tween","TweenMax","fromTo","scaleY","ease","Power1","easeIn","Scene","triggerElement","triggerHook","duration","setTween","addTo","contentAnimation","y","autoAlpha","componentDidMount","this","render","href","target","rel","to","Component","Image","alt"],"mappings":"8FAAA,4FASMA,EAAmBC,IAAOC,IAAV,qFAAGD,CAAH,g1BA6IPE,UA/DM,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SACJC,EAASF,EAA1BG,eACAC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,CAAQJ,SAAWA,GACjB,kBAAC,IAAD,CAAKK,MAAOF,EAAYE,MAAOC,YAAcH,EAAYI,QAAUC,SAAU,CAAC,MAAD,4BAC7E,kBAACb,EAAD,KACE,yBAAKc,UAAU,2BACb,4BAAMN,EAAYE,OAClB,yBAAKI,UAAU,eACb,2BAAKN,EAAYI,UAEnB,yBAAKE,UAAU,UAAUC,wBAAyB,CAAEC,OAAQP,KAO1DD,EAAYS,OAAOC,OAAS,GAAKV,EAAYS,OAAOE,KAAK,SAAAC,GAAO,OAAI,yBAAKC,IAAMD,EAAQV,MAAQI,UAAU,cACzG,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAOQ,SAAUF,EAAQG,MAAMC,gBAAgBC,MAAMC,IAAKhB,MAAOU,EAAQV,SAE3E,4BAAOU,EAAQV,YAGnB,kBAAC,IAAD,U,gICvGFiB,G,UAAmB1B,IAAOC,IAAV,sFAAGD,CAAH,m4CA6HhB2B,E,oJAOJC,eAAiB,WACb,IAAMC,EAAa,IAAIC,IAAYC,WAC7BC,EAAQC,WAASC,OAAT,wBAAyC,EAAG,CAAGC,OAAQ,GAAI,CAAEA,OAAQ,EAAGC,KAAMC,SAAOC,SAEnG,IAAIR,IAAYS,MAAM,CACpBC,eAAe,iBACfC,YAAa,GACbC,SAAU,QAEXC,SAASX,GACTY,MAAMf,I,EAGXgB,iBAAmB,WACjB,IAAMhB,EAAa,IAAIC,IAAYC,WAC7BC,EAAQC,WAASC,OAAT,0BAA2C,EAAG,CAAEY,EAAG,IAAKC,UAAW,GAAI,CAAED,EAAG,EAAGC,UAAW,EAAGX,KAAMC,SAAOC,SAExH,IAAIR,IAAYS,MAAM,CACpBC,eAAe,iBACfC,YAAa,GACbC,SAAU,QAEXC,SAASX,GACTY,MAAMf,I,8CA5BTmB,kBAAA,WACEC,KAAKrB,iBACLqB,KAAKJ,oB,EA6BPK,OAAA,WACE,OACE,kBAACxB,EAAD,CAAkBb,UAAU,iBAC1B,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,0BAAMA,UAAU,SAAhB,OACA,0BAAMA,UAAU,QAAhB,QAEF,yBAAKA,UAAU,SACb,yBAAKA,UAAU,OACb,iEACA,wCAAa,uBAAGA,UAAU,OAAOsC,KAAK,kCAAkCC,OAAO,SAASC,IAAI,uBAA/E,8BAEf,yBAAKxC,UAAU,UACb,uBAAGA,UAAU,OAAOsC,KAAK,iDAAiDC,OAAO,SAASC,IAAI,uBAA9F,OADF,IAC8H,gCAC5H,uBAAGxC,UAAU,OAAOsC,KAAK,6CAA6CC,OAAO,SAASC,IAAI,uBAA1F,QAFF,IAE2H,gCACzH,uBAAGxC,UAAU,OAAOsC,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAlF,QAHF,IAGmH,gCACjH,kBAAC,OAAD,CAAMxC,UAAU,OAAOyC,GAAG,SAA1B,e,GAnDaC,aA4DZ5B,O,kCCnMf,yBAce6B,IAVD,SAAC,GAAD,IAAE/C,EAAF,EAAEA,MAAOY,EAAT,EAASA,SAAT,OACZ,yBAAKoC,IAAMhD,EAAQgB,IAAMJ","file":"component---src-templates-work-template-js-bdc04f92064889d8c8f2.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from './../layouts/layout'\nimport styled from 'styled-components'\nimport SEO from './../components/seo'\n\nimport Image from './../components/image';\nimport ContactBlock from './../components/index/contact-block';\n\nconst WorkTemplateView = styled.div`\n  background: #fbf9f3;\n  width: 100%;\n\n  .work-template-container {\n    width: 60%;\n    margin: 0px auto;\n    padding: 120px 0px;\n    max-width: 1000px;\n    background: #fbf9f3;\n  \n    h1 {\n      text-transform: uppercase;\n      font-size: 140px;\n      margin-bottom: 50px;\n    }\n    .description {\n      font-size: 18px;\n      font-weight: lighter;\n      line-height: 1.4;\n      margin-bottom: 30px;\n    }\n\n    .content {\n      margin-bottom: 60px;\n      p {\n        font-size: 18px;\n        font-weight: lighter;\n        line-height: 1.4;\n        margin-bottom: 30px;\n      }\n    }\n\n    .work-image {\n      margin-bottom: 90px;\n      .element {\n        transition: opacity 300ms linear;\n      }\n      img {\n        max-width: 100%;\n        margin-bottom: 10px;\n      }\n      h3 { \n        text-transform: uppercase;\n        font-size: 20px;\n        letter-spacing: 1px;\n      }\n    }\n  }\n\n  @media(max-width: 1024px){\n    .work-template-container {\n      width:75%;\n    }\n  }\n\n  @media(max-width: 768px){\n    .work-template-container {\n      width:80%;\n    }\n  }\n\n  @media(max-width: 480px){\n    .work-template-container {\n      width:90%;\n      h1 {\n        text-transform: uppercase;\n        font-size: 100px;\n        margin-bottom: 30px;\n      }\n      .work-image {\n        margin-bottom: 50px;\n      }\n    }\n  }\n  \n`\n\nconst WorkTemplate = ( { data, location } ) => {\n  const { markdownRemark : work } = data;\n  const { frontmatter, html } = work;\n  return (\n    <Layout location={ location}>\n      <SEO title={frontmatter.title} description={ frontmatter.excerpt } keywords={[`web`, `javascript`, `developer`]} />\n      <WorkTemplateView>\n        <div className=\"work-template-container\">\n          <h1>{ frontmatter.title }</h1>\n          <div className=\"description\">\n            <p>{ frontmatter.excerpt }</p>\n          </div>\n          <div className=\"content\" dangerouslySetInnerHTML={{ __html: html}}></div>\n          {/* <div className=\"work-image\">\n            <div className=\"element\">\n              <Image imageUrl={frontmatter.thumbnail.childImageSharp.fluid.src} title={frontmatter.title} />\n            </div>\n          </div> */}\n      \n          { frontmatter.images.length > 0 && frontmatter.images.map( element => <div key={ element.title } className=\"work-image\">\n            <div className=\"element\">\n              <Image imageUrl={element.image.childImageSharp.fluid.src} title={element.title} />\n            </div>\n            <h3 >{ element.title }</h3>\n          </div>)}\n        </div>\n        <ContactBlock /> \n      </WorkTemplateView>\n    </Layout>\n  )\n}\n\nexport const WorkQuery = graphql`\n  query WorkByPath($path: String!) {\n    markdownRemark ( frontmatter: { path: { eq: $path }}) {\n      html\n      id\n      frontmatter {\n        path\n        title\n        excerpt\n        thumbnail {\n          childImageSharp {\n              fluid(maxWidth: 2500) {\n                  src\n              }\n          }\n        }\n        images {\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                  src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default WorkTemplate;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby'\n\nimport { TweenMax, Power1 } from 'gsap';\n\nimport ScrollMagic from 'ScrollMagic'\nimport 'scrollmagic/scrollmagic/minified/plugins/animation.gsap.min';\n\n\nconst ContactBlockView = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #fbf9f3;\n  position: relative;\n  overflow: hidden;\n  .cover {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    background: #B7C8Cb;\n    width: 100%;\n    height: 100%;\n  }\n  .content {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    background: transparent; \n    display: flex;\n    flex: 2;\n    flex-direction: row;\n    width: 100%;\n    height: 100%;\n\n    .left, .right {\n      position: relative;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      box-sizing: border-box;\n    }\n    .left {\n      flex: .75;\n      justify-content: center;\n      .month, .year { \n        color: #fff;\n        font-size: 400px;\n        font-family: 'Mfred';\n        text-transform: uppercase;\n        text-align: right;\n        width: 100%;\n        display:block;\n        line-height: .85;\n      }\n    }\n    .right {\n      flex: 1.25;\n      justify-content: center;\n      padding: 50px;\n      color: #fff;\n      font-size: 32px;\n      line-height: 1.4;\n      .top {\n        letter-spacing: 1px;\n        padding: 20px 0px;\n        border-bottom: 3px solid #fff; \n      }\n      .bottom {\n        padding: 20px 0px;\n        span { padding: 0px 10px;}\n        i {\n          opacity: .7; \n          font-style: normal;\n        }\n      }\n    }\n  }\n  @media(max-width: 1300px){\n    .content {\n      padding: 50px;\n      box-sizing: border-box;\n      .left {\n        .month, .year {\n          font-size: 320px;\n        }\n      }\n    }\n  }\n\n  @media(max-width: 1024px){\n    .content {\n      flex-direction: column;\n      justify-content: center;\n      .left {\n        flex-direction: row;\n        flex: 1;\n        padding: 50px 0px 0px;\n        justify-content: flex-start;\n        align-items: flex-end;\n        .month , .year {\n          text-align: left;\n          width: min-content;\n          display:inline;\n        }\n      }\n      .right {\n        flex: 1;\n        padding: 20px 0;\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  @media(max-width: 480px){\n    .content {\n      padding: 50px 20px;\n      .left {\n        padding: 50px 0px 10px;\n\n        .month , .year {\n          font-size: 100px;\n        }\n      }\n      .right {\n        padding: 0px 0px 30px;\n        font-size: 20px;\n      }\n    }\n  }\n\n` \n\nclass ContactBlock extends Component {\n\n  componentDidMount(){\n    this.coverAnimation();\n    this.contentAnimation();\n  }\n\n  coverAnimation = () => { \n      const controller = new ScrollMagic.Controller()\n      const tween = TweenMax.fromTo(`.block-contact .cover`, 1, {  scaleY: 0}, { scaleY: 1, ease: Power1.easeIn })\n      \n      new ScrollMagic.Scene({\n        triggerElement: `.block-contact`,\n        triggerHook: .9,\n        duration: '70%'\n      })\n      .setTween(tween)\n      .addTo(controller)\n  }\n\n  contentAnimation = () => {\n    const controller = new ScrollMagic.Controller()\n    const tween = TweenMax.fromTo(`.block-contact .content`, 1, { y: 100, autoAlpha: 0}, { y: 0, autoAlpha: 1, ease: Power1.easeIn })\n    \n    new ScrollMagic.Scene({\n      triggerElement: `.block-contact`,\n      triggerHook: .2,\n      duration: '15%'\n    })\n    .setTween(tween)\n    .addTo(controller)\n  } \n\n  render(){\n    return(\n      <ContactBlockView className=\"block-contact\">\n        <div className=\"cover\"></div>\n        <div className=\"content\">\n          <div className=\"left\">\n            <span className=\"month\">Sep</span>\n            <span className=\"year\">'21</span>\n          </div>\n          <div className=\"right\">\n            <div className=\"top\">\n              <p>I'm available for freelance works.</p>\n              <p>Say hello <a className=\"text\" href=\"mailto:juanmaperezvar@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">juanmaperezvar@gmail.com</a></p>\n            </div>\n            <div className=\"bottom\">\n              <a className=\"text\" href=\"https://www.linkedin.com/in/juanmaperezvargas/\" target=\"_blank\" rel=\"noopener noreferrer\">In </a> <i>|</i> \n              <a className=\"text\" href=\"https://www.instagram.com/encapsulated.io/\" target=\"_blank\" rel=\"noopener noreferrer\"> Ig </a> <i>|</i> \n              <a className=\"text\" href=\"https://twitter.com/juanmaperezvar\" target=\"_blank\" rel=\"noopener noreferrer\"> Tw </a> <i>|</i> \n              <Link className=\"text\" to=\"/blog\"> Blog </Link>  \n            </div>\n          </div>\n        </div>\n      </ContactBlockView>\n    )\n  }\n}\n\nexport default ContactBlock;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n\nconst Image = ({title, imageUrl}) => (\n  <img alt={ title } src={ imageUrl } />\n)\n\nImage.propTypes = {\n  title: PropTypes.string,\n  imageUrl:PropTypes.string\n}\n\n\nexport default Image"],"sourceRoot":""}