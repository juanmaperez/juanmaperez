{"version":3,"sources":["webpack:///./src/templates/workTemplate.js"],"names":["WorkTemplateView","styled","div","WorkTemplate","data","location","work","markdownRemark","frontmatter","html","title","description","excerpt","keywords","className","dangerouslySetInnerHTML","__html","images","length","map","element","key","imageUrl","image","childImageSharp","fluid","src"],"mappings":"8FAAA,4FASMA,EAAmBC,IAAOC,IAAV,qFAAGD,CAAH,g1BA6IPE,UA/DM,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SACJC,EAASF,EAA1BG,eACAC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,CAAQJ,SAAWA,GACjB,kBAAC,IAAD,CAAKK,MAAOF,EAAYE,MAAOC,YAAcH,EAAYI,QAAUC,SAAU,CAAC,MAAD,4BAC7E,kBAACb,EAAD,KACE,yBAAKc,UAAU,2BACb,4BAAMN,EAAYE,OAClB,yBAAKI,UAAU,eACb,2BAAKN,EAAYI,UAEnB,yBAAKE,UAAU,UAAUC,wBAAyB,CAAEC,OAAQP,KAO1DD,EAAYS,OAAOC,OAAS,GAAKV,EAAYS,OAAOE,KAAK,SAAAC,GAAO,OAAI,yBAAKC,IAAMD,EAAQV,MAAQI,UAAU,cACzG,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAOQ,SAAUF,EAAQG,MAAMC,gBAAgBC,MAAMC,IAAKhB,MAAOU,EAAQV,SAE3E,4BAAOU,EAAQV,YAGnB,kBAAC,IAAD","file":"component---src-templates-work-template-js-7f85f705fecb0cf39576.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from './../layouts/layout'\nimport styled from 'styled-components'\nimport SEO from './../components/seo'\n\nimport Image from './../components/image';\nimport ContactBlock from './../components/index/contact-block';\n\nconst WorkTemplateView = styled.div`\n  background: #fbf9f3;\n  width: 100%;\n\n  .work-template-container {\n    width: 60%;\n    margin: 0px auto;\n    padding: 120px 0px;\n    max-width: 1000px;\n    background: #fbf9f3;\n  \n    h1 {\n      text-transform: uppercase;\n      font-size: 140px;\n      margin-bottom: 50px;\n    }\n    .description {\n      font-size: 18px;\n      font-weight: lighter;\n      line-height: 1.4;\n      margin-bottom: 30px;\n    }\n\n    .content {\n      margin-bottom: 60px;\n      p {\n        font-size: 18px;\n        font-weight: lighter;\n        line-height: 1.4;\n        margin-bottom: 30px;\n      }\n    }\n\n    .work-image {\n      margin-bottom: 90px;\n      .element {\n        transition: opacity 300ms linear;\n      }\n      img {\n        max-width: 100%;\n        margin-bottom: 10px;\n      }\n      h3 { \n        text-transform: uppercase;\n        font-size: 20px;\n        letter-spacing: 1px;\n      }\n    }\n  }\n\n  @media(max-width: 1024px){\n    .work-template-container {\n      width:75%;\n    }\n  }\n\n  @media(max-width: 768px){\n    .work-template-container {\n      width:80%;\n    }\n  }\n\n  @media(max-width: 480px){\n    .work-template-container {\n      width:90%;\n      h1 {\n        text-transform: uppercase;\n        font-size: 100px;\n        margin-bottom: 30px;\n      }\n      .work-image {\n        margin-bottom: 50px;\n      }\n    }\n  }\n  \n`\n\nconst WorkTemplate = ( { data, location } ) => {\n  const { markdownRemark : work } = data;\n  const { frontmatter, html } = work;\n  return (\n    <Layout location={ location}>\n      <SEO title={frontmatter.title} description={ frontmatter.excerpt } keywords={[`web`, `javascript`, `developer`]} />\n      <WorkTemplateView>\n        <div className=\"work-template-container\">\n          <h1>{ frontmatter.title }</h1>\n          <div className=\"description\">\n            <p>{ frontmatter.excerpt }</p>\n          </div>\n          <div className=\"content\" dangerouslySetInnerHTML={{ __html: html}}></div>\n          {/* <div className=\"work-image\">\n            <div className=\"element\">\n              <Image imageUrl={frontmatter.thumbnail.childImageSharp.fluid.src} title={frontmatter.title} />\n            </div>\n          </div> */}\n      \n          { frontmatter.images.length > 0 && frontmatter.images.map( element => <div key={ element.title } className=\"work-image\">\n            <div className=\"element\">\n              <Image imageUrl={element.image.childImageSharp.fluid.src} title={element.title} />\n            </div>\n            <h3 >{ element.title }</h3>\n          </div>)}\n        </div>\n        <ContactBlock /> \n      </WorkTemplateView>\n    </Layout>\n  )\n}\n\nexport const WorkQuery = graphql`\n  query WorkByPath($path: String!) {\n    markdownRemark ( frontmatter: { path: { eq: $path }}) {\n      html\n      id\n      frontmatter {\n        path\n        title\n        excerpt\n        thumbnail {\n          childImageSharp {\n              fluid(maxWidth: 2500) {\n                  src\n              }\n          }\n        }\n        images {\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1000) {\n                  src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default WorkTemplate;\n"],"sourceRoot":""}